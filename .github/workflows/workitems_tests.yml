# Note: auto-generated by `_gen_workflows.py`
name: Work Items Tests
'on':
  push:
    branches:
    - master
    - wip
    paths:
    - workitems/**
    - .github/workflows/workitems_tests.yml
    - devutils/**
  pull_request:
    branches:
    - master
    paths:
    - workitems/**
    - .github/workflows/workitems_tests.yml
    - devutils/**
defaults:
  run:
    working-directory: ./workitems
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
        - ubuntu-py310-devmode
        - windows-py310-devmode
        - macos-py310-devmode
        include:
        - name: ubuntu-py310-devmode
          python: '3.10'
          os: ubuntu-latest
        - name: windows-py310-devmode
          python: '3.10'
          os: windows-latest
        - name: macos-py310-devmode
          os: macos-latest
          python: '3.10'
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: poetry
    - name: Install invoke/tomlkit
      run: pip install invoke tomlkit
    - name: Install project (not dev)
      if: contains(matrix.name, '-devmode') == false
      run: python -m invoke install
    - name: Install project (dev)
      if: contains(matrix.name, '-devmode')
      run: python -m invoke devinstall
    - name: Test
      env:
        GITHUB_ACTIONS_MATRIX_NAME: ${{ matrix.name }}
        CI_CREDENTIALS: ${{ secrets.CI_CREDENTIALS }}
        CI_ENDPOINT: ${{ secrets.CI_ENDPOINT }}
      run: python -m invoke test
    - name: '`inv lint`/`inv typecheck`, potentially fixed with `inv pretty`'
      if: always()
      run: '

        python -m invoke lint

        python -m invoke typecheck

        '
