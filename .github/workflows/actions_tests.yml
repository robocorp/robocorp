name: Actions Tests

on:
  push:
    branches:
      - "master"
      - "wip"
    paths:
      - "actions/**"
      - "log/**"
      - ".github/workflows/actions_tests.yml"
  pull_request:
    branches:
      - "master"
    paths:
      - "actions/**"
      - "log/**"
      - ".github/workflows/actions_tests.yml"

defaults:
  run:
    working-directory: './actions'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
          "ubuntu-py310-devmode",
#           "windows-py310",
        ]

        include:
          - name: "ubuntu-py310-devmode"
            python: "3.10"
            os: ubuntu-latest
            PATH_SEPARATOR: ":"
#           - name: "windows-py310"
#             python: "3.10"
#             os: windows-latest
#             PATH_SEPARATOR: ";"


    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3

    - name: Install poetry
      run: |
        pipx install poetry

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'poetry'

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        registry-url: "https://npm.pkg.github.com"
        scope: "@robocorp"

    - name: Install invoke/tomlkit
      run: pip install invoke tomlkit

    - name: Install project (dev)
      if: contains(matrix.name, '-devmode')
      run: python -m invoke devinstall

    - name: Install project (not dev)
      if: contains(matrix.name, '-devmode') == false
      run: poetry install

    # We need to enable the log to be run in dev mode
    - name: npm ci
      working-directory: ./log/output-react/
      if: contains(matrix.name, '-devmode')
      run: |
        npm ci
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

    - name: Print robocorp-log info and build the output view.
      if: contains(matrix.name, '-devmode')
      run: |
        poetry run python -c "import sys;print('\n'.join(str(x) for x in sys.path))"
        poetry run python -c "from robocorp import log;print(log.__file__)"
        cd ../log
        poetry run inv build-output-view-react
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

    - name: "`inv lint`/`inv typecheck`, potentially fixed with `inv pretty`"
      if: always()
      run: |
        inv lint
        inv typecheck
        
    # Note: the env for dev mode or not is already setup at this point.
    - name: Test
      if: always()
      env:
        GITHUB_ACTIONS_MATRIX_NAME: ${{ matrix.name }}
        # We need to access robocorp_log_tests.fixtures in actions tests.
        PYTHONPATH: '../log/tests'
      run: |
        poetry run pytest -rfE -vv tests/actions_tests
        



