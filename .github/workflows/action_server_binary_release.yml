name: Action Server [BINARY] Release

on:
  workflow_dispatch:
    # Enables manual triggering via GitHub Actions

  push:
    branches:
      - "wip"

    tags:
      - "robocorp-action_server-*"


defaults:
  run:
    working-directory: './action_server'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
  
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: "https://npm.pkg.github.com"
          scope: "@robocorp"


      - name: Install cibuildwheel
        run: |
            python -m pip install poetry
            python -m pip install invoke
            python -m invoke build-frontend
        env:
           CI: true
           NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        
        
      - name: Build binary
        run: |
            python -m pip install pyoxidizer
            cd build-binary
            pyoxidizer run

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: "action_server/build-binary/build/*"

      # Having a separate artifact for version.txt helps downstream workflows
      - name: Get version
        if: matrix.os == 'ubuntu-20.04'
        run: |
            poetry version | awk '{print $2}' > version.txt
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-20.04'
        with:
          name: action-server-version
          path: "action_server/version.txt"

      - name: Copy assets [Linux]
        if: matrix.os == 'ubuntu-20.04'
        run: |
            cp -R build-binary/build/x86_64-unknown-linux-gnu/debug/install/* go-wrapper/assets
      - name: Copy assets [Mac]
        if: matrix.os == 'macos-11'
        run: |
            cp -R build-binary/build/x86_64-apple-darwin/debug/install/* go-wrapper/assets
      - name: Copy assets [Windows]
        if: matrix.os == 'windows-2019'
        run: |
            xcopy /e /h /i build-binary\\build\\x86_64-pc-windows-msvc\\debug\\install go-wrapper\\assets

      - uses: actions/download-artifact@v4
        with:
          name: action-server-version
          path: "action_server/go-wrapper/assets"
      
      - name: Build Go binary wrapper
        run: |
            cd go-wrapper
            go build -o action-server-unsigned

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-action-server-unsigned
          path: "action_server/go-wrapper/action-server-unsigned"
