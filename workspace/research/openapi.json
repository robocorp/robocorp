{
    "info": {
        "title": "Robocorp Control Room API",
        "description": "Robocorp Control Room API",
        "version": "1.0"
    },
    "openapi": "3.0.0",
    "tags": [
        {
            "name": "asset",
            "description": "Asset Storage"
        },
        {
            "name": "assistant",
            "description": "Assistant"
        },
        {
            "name": "process",
            "description": "Process"
        },
        {
            "name": "process-run",
            "description": "Process Run"
        },
        {
            "name": "step-run",
            "description": "Step Run"
        },
        {
            "name": "task-package",
            "description": "Task Package"
        },
        {
            "name": "webhooks",
            "description": "Webhooks"
        },
        {
            "name": "work-item",
            "description": "Work Item"
        },
        {
            "name": "worker",
            "description": "Worker"
        },
        {
            "name": "worker-group",
            "description": "Worker Group"
        },
        {
            "name": "workspace",
            "description": "Workspace"
        }
    ],
    "components": {
        "securitySchemes": {
            "API Key with permissions": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "description": "A Control Room API key with the necessary permission(s) granted.\nPrefix the API key value retrieved from Control Room with RC-WSKEY.\n"
            }
        },
        "schemas": {
            "WorkspaceResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "organization"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "object",
                        "required": [
                            "id",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "WorkerResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "state"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "offline",
                            "idle",
                            "busy"
                        ]
                    }
                }
            },
            "WorkerGroupResource": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "LinkTokenResource": {
                "type": "object",
                "required": [
                    "id",
                    "expires_at",
                    "link_token"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "link_token": {
                        "type": "string"
                    }
                }
            },
            "WorkerGroupLinkTokenResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "expires_at",
                    "worker_group"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "worker_group": {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "ProcessRunOutputResource": {
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "process",
                    "process_run",
                    "payload",
                    "files"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "process": {
                        "type": "object",
                        "$ref": "#/components/schemas/ProcessReferenceResource"
                    },
                    "process_run": {
                        "type": "object",
                        "$ref": "#/components/schemas/ProcessRunReferenceResource"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WorkItemPayload"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkItemFile"
                        }
                    }
                }
            },
            "WorkspaceReferenceResource": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ProcessReferenceResource": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ProcessRunReferenceResource": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ProcessRunResource": {
                "type": "object",
                "required": [
                    "id",
                    "state",
                    "created_at",
                    "started_at",
                    "ended_at",
                    "started_by",
                    "process",
                    "duration"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "new",
                            "in_progress",
                            "completed",
                            "unresolved",
                            "stopping"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "ended_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "process": {
                        "type": "object",
                        "required": [
                            "id",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "started_by": {
                        "type": "object",
                        "required": [
                            "type",
                            "details"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "api",
                                    "user",
                                    "schedule",
                                    "email"
                                ]
                            },
                            "details": {
                                "type": "object",
                                "description": "Details are only available when the process run was started by a `user`",
                                "nullable": true,
                                "required": [
                                    "id",
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "duration": {
                        "type": "number",
                        "nullable": true,
                        "description": "Process run duration in seconds"
                    }
                }
            },
            "ActivityResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ActivityRunResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "WebhookResource": {
                "type": "object",
                "required": [
                    "id",
                    "process",
                    "enabled_events",
                    "secret",
                    "endpoint"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "process": {
                        "nullable": true,
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "enabled_events": {
                        "$ref": "#/components/schemas/WebhookEnabledEvents"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string",
                        "format": "url"
                    }
                }
            },
            "WebhookEnabledEvents": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "ProcessWebhookEnabledEvents": {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "process_run.started",
                        "process_run.completed",
                        "process_run.unresolved"
                    ]
                }
            },
            "ProcessWebhookPayload": {
                "type": "object",
                "required": [
                    "endpoint",
                    "enabled_events",
                    "process"
                ],
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "format": "url"
                    },
                    "enabled_events": {
                        "$ref": "#/components/schemas/ProcessWebhookEnabledEvents"
                    },
                    "process": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    }
                }
            },
            "WorkItemState": {
                "type": "string",
                "enum": [
                    "new",
                    "pending",
                    "in_progress",
                    "failed",
                    "done"
                ]
            },
            "WorkItemException": {
                "type": "object",
                "nullable": true,
                "required": [
                    "code",
                    "type",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "application",
                            "business",
                            "orchestrator",
                            "unspecified"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "WorkItemPayload": {
                "nullable": true,
                "$ref": "#/components/schemas/anyValidJson"
            },
            "WorkItemFile": {
                "type": "object",
                "required": [
                    "id",
                    "size",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number",
                        "description": "File size in bytes"
                    },
                    "name": {
                        "type": "string",
                        "description": "File name"
                    }
                }
            },
            "WorkItemWithoutDataResource": {
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "state",
                    "state_updated_at",
                    "process",
                    "process_run",
                    "exception",
                    "step",
                    "step_run"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "$ref": "#/components/schemas/WorkItemState"
                    },
                    "state_updated_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "process": {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "process_run": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "step_run": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "exception": {
                        "$ref": "#/components/schemas/WorkItemException"
                    }
                }
            },
            "WorkItemResource": {
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "state",
                    "state_updated_at",
                    "process",
                    "process_run",
                    "exception",
                    "step",
                    "step_run",
                    "payload",
                    "files"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "$ref": "#/components/schemas/WorkItemState"
                    },
                    "state_updated_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "process": {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "process_run": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "step_run": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WorkItemPayload"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkItemFile"
                        }
                    },
                    "exception": {
                        "$ref": "#/components/schemas/WorkItemException"
                    }
                }
            },
            "ProcessRunCallback": {
                "type": "object",
                "required": [
                    "url",
                    "secret",
                    "callback_events"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "callback_events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "started",
                                "completed",
                                "unresolved"
                            ]
                        }
                    }
                }
            },
            "AssetResource": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "AssetPayloadContentType": {
                "type": "string"
            },
            "AssetUploadResource": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AssetUploadPendingResource"
                    },
                    {
                        "$ref": "#/components/schemas/AssetUploadCompletedResource"
                    },
                    {
                        "$ref": "#/components/schemas/AssetUploadFailedResource"
                    }
                ]
            },
            "AssetUploadCreatedResourceWithUrl": {
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "content_type",
                    "upload_url"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    },
                    "upload_url": {
                        "type": "string"
                    }
                }
            },
            "AssetUploadCreatedResource": {
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "content_type"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "completed"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    }
                }
            },
            "AssetUploadPendingResource": {
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "content_type"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    }
                }
            },
            "AssetUploadCompletedResource": {
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "content_type"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "completed"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    }
                }
            },
            "AssetUploadFailedResource": {
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "content_type",
                    "reason"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "failed"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "EmptyAssetDetailsResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "payload"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssetPayloadEmptyResource"
                            }
                        ]
                    }
                }
            },
            "AssetDetailsResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "payload"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AssetPayloadEmptyResource"
                            },
                            {
                                "$ref": "#/components/schemas/AssetPayloadUrlResource"
                            }
                        ]
                    }
                }
            },
            "AssetPayloadEmptyResource": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "empty"
                        ]
                    }
                }
            },
            "AssetPayloadDataResource": {
                "type": "object",
                "required": [
                    "type",
                    "content_type",
                    "data"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "data"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "AssetPayloadUrlResource": {
                "type": "object",
                "required": [
                    "type",
                    "content_type",
                    "url"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "url"
                        ]
                    },
                    "content_type": {
                        "$ref": "#/components/schemas/AssetPayloadContentType"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "TaskPackageResource": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TaskPackageDownloadLink": {
                "type": "object",
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "TaskPackageUploadLink": {
                "type": "object",
                "required": [
                    "url",
                    "form_data"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "form_data": {
                        "type": "object",
                        "description": "The form data fields you must include when uploading the task package bundle"
                    }
                }
            },
            "AssistantResource": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "task",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "task": {
                        "type": "object",
                        "required": [
                            "package_id",
                            "name"
                        ],
                        "properties": {
                            "package_id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AssistantRunResource": {
                "type": "object",
                "required": [
                    "id",
                    "state",
                    "error",
                    "started_at",
                    "ended_at",
                    "duration",
                    "assistant"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "in_progress",
                            "completed",
                            "failed"
                        ]
                    },
                    "error": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                            "code"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            }
                        }
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ended_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "number",
                        "nullable": true
                    },
                    "assistant": {
                        "type": "object",
                        "required": [
                            "id",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "StepRunResource": {
                "type": "object",
                "required": [
                    "id",
                    "state",
                    "state_updated_at",
                    "error",
                    "started_at",
                    "ended_at",
                    "duration",
                    "step"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "new",
                            "awaiting_worker",
                            "in_progress",
                            "completed",
                            "failed"
                        ]
                    },
                    "state_updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "type": "object",
                        "description": "An object containing the error code, if the run failed.",
                        "nullable": true,
                        "required": [
                            "code"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            }
                        }
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "duration": {
                        "type": "number",
                        "nullable": true
                    },
                    "step": {
                        "type": "object",
                        "required": [
                            "id",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "WorkerToGroupLinkListing": {
                "type": "object",
                "required": [
                    "worker",
                    "worker_groups"
                ],
                "properties": {
                    "worker": {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "worker_groups": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "id",
                                "name"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "validationErrorResponse": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "genericErrorResponse": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "anyValidJson": {
                "oneOf": [
                    {
                        "type": "object"
                    },
                    {
                        "type": "array",
                        "items": {}
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "boolean"
                    }
                ]
            },
            "anyValidJsonOptional": {
                "oneOf": [
                    {
                        "type": "object"
                    },
                    {
                        "type": "array",
                        "items": {}
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "boolean"
                    }
                ]
            },
            "paginationDetails": {
                "type": "object",
                "required": [
                    "next",
                    "has_more"
                ],
                "properties": {
                    "next": {
                        "type": "string",
                        "description": "The full URL to access the next set of results. Null if there are no next set of results.",
                        "nullable": true,
                        "format": "url"
                    },
                    "has_more": {
                        "type": "boolean",
                        "description": "Whether or not there are more elements available after this set. If false, this set comprises the end of the list."
                    }
                }
            }
        }
    },
    "paths": {
        "/workspaces/{workspace_id}": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspace",
                "description": "Returns the workspace.",
                "operationId": "getWorkspace",
                "security": [
                    {
                        "API Key with permissions": []
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/workers": {
            "get": {
                "tags": [
                    "worker"
                ],
                "summary": "List workers",
                "description": "Returns a list of all workers linked to the requested workspace.",
                "operationId": "listWorkers",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Workers",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkerResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/workers/link-tokens": {
            "post": {
                "tags": [
                    "worker"
                ],
                "summary": "Create worker link token",
                "description": "Generates and returns a link token used to link a new worker to the requested workspace.",
                "operationId": "createLinkToken",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker should reside.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "expires_at"
                                ],
                                "properties": {
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Link Token",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkTokenResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/workers/{worker_id}": {
            "get": {
                "tags": [
                    "worker"
                ],
                "summary": "Get worker",
                "description": "Returns a worker linked to the requested workspace.",
                "operationId": "getWorker",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_id",
                        "description": "The id of the worker to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "worker"
                ],
                "summary": "Update worker",
                "description": "Updates the requested worker by setting only the values defined in the request body.",
                "operationId": "updateWorker",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_id",
                        "description": "The id of the worker to update.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The worker details to update.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "worker"
                ],
                "summary": "Delete worker",
                "description": "Deletes the requested worker. This action is irreversible!",
                "operationId": "deleteWorker",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_id",
                        "description": "The id of the worker to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Worker",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups": {
            "get": {
                "tags": [
                    "worker-group"
                ],
                "summary": "List worker groups",
                "description": "Returns a list of all worker groups linked to the requested workspace.",
                "operationId": "listWorkerGroups",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace to list worker groups for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Worker Groups",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkerGroupResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Create worker group",
                "description": "Creates a new worker group linked to the requested workspace.",
                "operationId": "createWorkerGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace under which the worker group should be created.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the worker group to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Group",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups/{worker_group_id}": {
            "get": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Get worker group",
                "description": "Returns a worker group linked to the requested workspace.",
                "operationId": "getWorkerGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker Group",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Update worker group",
                "description": "Updates the requested worker group by setting only the values defined in the request body.",
                "operationId": "updateWorkerGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to update.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The worker group details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Group",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Delete worker group",
                "description": "Deletes the requested worker group. This action is irreversible!",
                "operationId": "deleteWorkerGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Worker Group",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups/{worker_group_id}/workers": {
            "put": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Add worker to worker group",
                "description": "Adds an existing worker to the requested worker group.",
                "operationId": "addWorkerToGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to add the worker to",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The id of the worker to add to the worker group\n",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "worker"
                                ],
                                "properties": {
                                    "worker": {
                                        "type": "object",
                                        "required": [
                                            "id"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Group Link Listing",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerToGroupLinkListing"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups/{worker_group_id}/workers/{worker_id}": {
            "delete": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Remove worker from worker group",
                "description": "Removes an existing worker from the requested worker group.",
                "operationId": "removeWorkerFromGroup",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to remove the worker from",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_id",
                        "description": "The id of the worker to remove from the worker group",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker Group Link Listing",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerToGroupLinkListing"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups/{worker_group_id}/link-tokens": {
            "get": {
                "tags": [
                    "worker-group"
                ],
                "summary": "List worker group link tokens",
                "description": "Returns a list of all link tokens for the requested worker group.\n**Note:** For security reasons, the link token value can be retrieved in Control Room only.\n",
                "operationId": "listWorkerGroupLinkTokens",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to which the link tokens belong.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Worker Group Link Tokens",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkerGroupLinkTokenResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Create worker group link token",
                "description": "Generates and returns a link token used to link a worker to the requested worker group.\n**Note:** For security reasons, the link token value can be retrieved in Control Room only.\n",
                "operationId": "createWorkerGroupLinkToken",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to which the link token belongs.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the worker group link token to create\n",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "expires_at"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Group Link Token",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupLinkTokenResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/worker-groups/{worker_group_id}/link-tokens/{link_token_id}": {
            "get": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Get worker group link token",
                "description": "Returns a link token for the requested work group.\n**Note**: For security reasons, the Link Token value can be retrieved in Control Room only.\n",
                "operationId": "getWorkerGroupLinkToken",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.read_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to which the link token belongs.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "link_token_id",
                        "description": "The id of the worker group link token to retrieve.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker Group Link Token",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupLinkTokenResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Update worker group link token",
                "description": "Updates a link token by setting only the values defined in the request body.",
                "operationId": "updateWorkerGroupLinkToken",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to which the link token belongs.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "link_token_id",
                        "description": "The id of the worker group link token to update.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the worker group link token to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "expires_at"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Worker Group Link Token",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerGroupLinkTokenResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "worker-group"
                ],
                "summary": "Delete worker group link token",
                "description": "Deletes the requested link token. This action is irreversible!",
                "operationId": "deleteWorkerGroupLinkToken",
                "security": [
                    {
                        "API Key with permissions": [
                            "Workers.write_workers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker group resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_group_id",
                        "description": "The id of the worker group to which the link token belongs.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "link_token_id",
                        "description": "The id of the worker group link token to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Worker Group Link Token",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/process-runs": {
            "get": {
                "tags": [
                    "process-run"
                ],
                "summary": "List process runs",
                "description": "Returns a paginated list of process runs. If a process id is specified in the query parameters, the response will only contain process runs from that process. If not, the response will contain the process runs of the workspace in the path.",
                "operationId": "listProcessRuns",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_runs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_id",
                        "description": "Process ID, if specified, the response will only contain the process runs from this process",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "description": "State of process runs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "in_progress",
                                "completed",
                                "unresolved",
                                "stopping"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Process Runs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProcessRunResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/processes/{process_id}/process-runs-integrations": {
            "post": {
                "tags": [
                    "process-run"
                ],
                "summary": "Start process run (for integrations)",
                "description": "Starts a process run for the requested process.\nThis endpoint is useful when you don't have control over the **headers** and / or **request body** of the caller and need a plain URL. This includes e.g. certain integration cases.\nThe **full request body** will be provided as the input work item for the process run.\nThe **API Key** must be provided as the value of the `token` query-string parameter.\nThis endpoint supports **webhook handshakes** for added security. Currently we support the protocol employed by [Asana](https://asana.com/).\nIf you are using Asana, use the `with_handshake=asana` query string parameter when constructing the URL to enable Asana webhook handshakes.\n",
                "operationId": "startProcessRunQsAuth",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.trigger_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_id",
                        "description": "Process ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "description": "Authorization token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_handshake",
                        "description": "Handshake type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asana"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Any valid JSON payload.\nThe full request body is passed as a work item to the process run input.\n",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/anyValidJson"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Started Process Run",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "started",
                                        "id"
                                    ],
                                    "properties": {
                                        "started": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/processes/{process_id}/process-runs": {
            "post": {
                "tags": [
                    "process-run"
                ],
                "summary": "Start process run",
                "description": "Starts a process run for the requested process.\nYou may choose to start a process run without work items, with specified work items, or with the work items that are waiting in the input queue of the specified process.\n",
                "operationId": "startProcessRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.trigger_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the process resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_id",
                        "description": "The id of the process to start.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Omitting the request body will start a process run with either the default work item, if configured, or an empty work item.\n",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "nullable": true,
                                        "properties": {
                                            "callback": {
                                                "$ref": "#/components/schemas/ProcessRunCallback"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "work_item_ids"
                                        ],
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "with_work_item_ids"
                                                ]
                                            },
                                            "work_item_ids": {
                                                "description": "Work item ids to start the run with.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "callback": {
                                                "$ref": "#/components/schemas/ProcessRunCallback"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "type"
                                        ],
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "with_inputs"
                                                ]
                                            },
                                            "callback": {
                                                "$ref": "#/components/schemas/ProcessRunCallback"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "payloads"
                                        ],
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "with_payloads"
                                                ]
                                            },
                                            "payloads": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/WorkItemPayload"
                                                }
                                            },
                                            "callback": {
                                                "$ref": "#/components/schemas/ProcessRunCallback"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Started Process Run",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "description": "This signals that a new process run was not started. This happens when a process run start with Input Work Items is requested, but no Input Work Items are available.\n",
                                            "type": "object",
                                            "required": [
                                                "started"
                                            ],
                                            "properties": {
                                                "started": {
                                                    "type": "boolean",
                                                    "enum": [
                                                        false
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "required": [
                                                "started",
                                                "id"
                                            ],
                                            "properties": {
                                                "started": {
                                                    "type": "boolean",
                                                    "enum": [
                                                        true
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/process-runs/{process_run_id}": {
            "get": {
                "tags": [
                    "process-run"
                ],
                "summary": "Get process run",
                "description": "Returns a process run",
                "operationId": "getProcessRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "ID of the process run",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process Run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessRunResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "process-run"
                ],
                "summary": "Delete process run",
                "description": "Deletes a process run. This action is irreversible!",
                "operationId": "deleteProcessRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_runs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the robot resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "The id of the process run to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Process Run",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/process-runs/{process_run_id}/stop": {
            "post": {
                "tags": [
                    "process-run"
                ],
                "summary": "Stop process run",
                "description": "Stops the process run.",
                "operationId": "stopProcessRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.trigger_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the process run resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "The id of the process run to stop.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Set whether or not to set the remaining work items as done or terminating the ongoing activity runs, as well as the reason for stopping the process run.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "set_remaining_work_items_as_done",
                                    "terminate_ongoing_activity_runs"
                                ],
                                "properties": {
                                    "set_remaining_work_items_as_done": {
                                        "type": "boolean"
                                    },
                                    "terminate_ongoing_activity_runs": {
                                        "type": "boolean"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stopped Process Run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "accepted"
                                    ],
                                    "properties": {
                                        "accepted": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/processes": {
            "get": {
                "tags": [
                    "process"
                ],
                "summary": "List processes",
                "description": "Returns a list of all processes linked to the requested workspace.",
                "operationId": "listProcesses",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Processes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "data"
                                    ],
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "created_at"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/work-items/batch": {
            "post": {
                "tags": [
                    "work-item"
                ],
                "summary": "Retry, delete or mark work items as done",
                "description": "Run a batch operation on one or more work items.\nYou can retry, delete or mark failed work items as done.\n",
                "operationId": "runWorkItemBatchOperation",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.write_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Work item batch operation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "batch_operation",
                                    "work_item_ids"
                                ],
                                "properties": {
                                    "batch_operation": {
                                        "type": "string",
                                        "enum": [
                                            "retry",
                                            "delete",
                                            "mark_as_done"
                                        ]
                                    },
                                    "work_item_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work item batch operation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "accepted"
                                    ],
                                    "properties": {
                                        "accepted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/work-items": {
            "get": {
                "tags": [
                    "work-item"
                ],
                "summary": "List work items",
                "description": "Returns a paginated list of work items. You can specify filtering work item by state, process_id and process_run_id using the query parameters.\n",
                "operationId": "listWorkItems",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_id",
                        "description": "Process ID",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "Process Run ID",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "description": "Work item state filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/WorkItemState"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Work Items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkItemWithoutDataResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "work-item"
                ],
                "summary": "Create work item",
                "description": "Create a work item for the requested process.",
                "operationId": "createWorkItem",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.write_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Process work item payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "process",
                                    "payload"
                                ],
                                "properties": {
                                    "process": {
                                        "type": "object",
                                        "required": [
                                            "id"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "payload": {
                                        "$ref": "#/components/schemas/WorkItemPayload"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work Item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkItemResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflicting request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/work-items/{work_item_id}": {
            "get": {
                "tags": [
                    "work-item"
                ],
                "summary": "Get work item",
                "description": "Returns a work item for the requested process. You can specify whether you want to also retrieve the work item's data (payload and/or files) by supplying the `include_data` query parameter.\n",
                "operationId": "getWorkItem",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "work_item_id",
                        "description": "Work Item ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Work Item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkItemResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/work-items/{work_item_id}/files/upload": {
            "post": {
                "tags": [
                    "work-item"
                ],
                "summary": "Create work item file",
                "description": "Request to upload a work item file.",
                "operationId": "createWorkItemFile",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.write_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "work_item_id",
                        "description": "Work Item ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name and size of work item file to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "file_name",
                                    "file_size"
                                ],
                                "properties": {
                                    "file_name": {
                                        "type": "string"
                                    },
                                    "file_size": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work Item File Upload Details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "form_data"
                                    ],
                                    "properties": {
                                        "url": {
                                            "type": "string"
                                        },
                                        "form_data": {
                                            "type": "object",
                                            "description": "The form data fields you must include when uploading the file"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/work-items/{work_item_id}/payload": {
            "put": {
                "tags": [
                    "work-item"
                ],
                "summary": "Update work item payload",
                "description": "Update the payload for the requested work item.",
                "operationId": "updateWorkItemPayload",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.write_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "work_item_id",
                        "description": "Work Item ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated payload of work item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payload": {
                                        "$ref": "#/components/schemas/anyValidJson"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work Item Payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "payload"
                                    ],
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/components/schemas/anyValidJson"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/process-runs/{process_run_id}/outputs": {
            "get": {
                "tags": [
                    "process-run"
                ],
                "summary": "List process run outputs",
                "description": "Returns a list of all outputs for the requested process run.",
                "operationId": "listProcessRunOutputs",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_work_items"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the process run resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "The id of the process run for which to list the process run outputs.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Process Run Outputs",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "has_more",
                                        "next",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProcessRunOutputResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/task-packages": {
            "post": {
                "tags": [
                    "task-package"
                ],
                "summary": "Create new task package",
                "description": "Creates a new task package with the given name in the requested workspace.",
                "operationId": "createTaskPackage",
                "security": [
                    {
                        "API Key with permissions": [
                            "Tasks.write_task_packages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace in which to create the task package",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The name of the task package to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task Package",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPackageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/task-packages/{task_package_id}/download": {
            "get": {
                "tags": [
                    "task-package"
                ],
                "summary": "Get task package download link",
                "description": "Returns a URL to download the task package bundle.",
                "operationId": "getTaskPackageDownloadLink",
                "security": [
                    {
                        "API Key with permissions": [
                            "Tasks.read_task_packages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace in which the task package resides",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "task_package_id",
                        "description": "The id of the task package to get the download link for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Package Download Link",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPackageDownloadLink"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/task-packages/{task_package_id}/upload": {
            "get": {
                "tags": [
                    "task-package"
                ],
                "summary": "Get task package upload link",
                "description": "Returns a URL + form data payload for uploading the task package bundle.",
                "operationId": "getTaskPackageUploadLink",
                "security": [
                    {
                        "API Key with permissions": [
                            "Tasks.write_task_packages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace in which the task package resides",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "task_package_id",
                        "description": "The id of the task package to get the upload link for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Package upload URL and form data fields",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPackageUploadLink"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/task-packages/{task_package_id}": {
            "delete": {
                "tags": [
                    "task-package"
                ],
                "summary": "Delete task package",
                "description": "Deletes a specific task package. This action is irreversible!",
                "operationId": "deleteTaskPackage",
                "security": [
                    {
                        "API Key with permissions": [
                            "Tasks.write_task_packages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the task package resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "task_package_id",
                        "description": "The id of the task package to delete.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Task Package",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assets": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "List assets",
                "description": "Returns a list of all assets linked to the requested workspace.",
                "operationId": "listAssets",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.read_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Assets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "data"
                                    ],
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "Create new asset",
                "description": "Creating an asset is a multi-step process, see “Create an asset upload” to specify the data.",
                "operationId": "createAsset",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.write_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker should reside.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Asset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyAssetDetailsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assets/{asset_id}": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Get asset",
                "description": "Returns an asset for the requested workspace. The asset is returned including its payload.",
                "operationId": "getAsset",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.read_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asset_id",
                        "description": "Asset ID or Asset Name prefixed with `name:` e.g. `name:my-asset-name`",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetDetailsResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "asset"
                ],
                "summary": "Delete asset",
                "description": "Deletes the requested asset. This action is irreversible!",
                "operationId": "deleteAsset",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.write_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "The id of the workspace on which the worker resides.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asset_id",
                        "description": "Asset ID or Asset Name prefixed with `name:` e.g. `name:my-asset-name`",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Asset",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assets/{asset_id}/uploads": {
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "Create asset upload",
                "description": "Create an upload for the requested asset payload. For payloads with less than 5MB you can upload the contents directly on the upload creation by specifying the data field. For larger uploads you can create the upload and use the returned upload URL for uploading the contents.",
                "operationId": "createAssetUpload",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.write_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asset_id",
                        "description": "Asset ID or Asset Name prefixed with `name:` e.g. `name:my-asset-name`",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "content_type"
                                ],
                                "properties": {
                                    "content_type": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Asset Upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/AssetUploadCreatedResource"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AssetUploadCreatedResourceWithUrl"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assets/{asset_id}/uploads/{upload_id}": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Get asset upload",
                "description": "Get the upload of an asset.",
                "operationId": "getAssetUpload",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assets.write_asset_storage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asset_id",
                        "description": "Asset ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "upload_id",
                        "description": "Payload Upload ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetUploadResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/webhooks": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "List Webhooks",
                "description": "Retrieves a list of all webhooks for the requested workspace.",
                "operationId": "listWebhooks",
                "security": [
                    {
                        "API Key with permissions": [
                            "Webhooks.read_webhooks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workspace"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Webhooks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "data"
                                    ],
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "process",
                                                    "enabled_events",
                                                    "endpoint"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "process": {
                                                        "nullable": true,
                                                        "type": "object",
                                                        "required": [
                                                            "id"
                                                        ],
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "enabled_events": {
                                                        "$ref": "#/components/schemas/WebhookEnabledEvents"
                                                    },
                                                    "endpoint": {
                                                        "type": "string",
                                                        "format": "url"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Create Process webhook",
                "description": "Creates a process webhook for the requested workspace.",
                "operationId": "createWebhook",
                "security": [
                    {
                        "API Key with permissions": [
                            "Webhooks.write_webhooks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workspace"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessWebhookPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/webhooks/{webhook_id}": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Get Webhook",
                "description": "Returns a webhook for the requested workspace.",
                "operationId": "getWebhook",
                "security": [
                    {
                        "API Key with permissions": [
                            "Webhooks.read_webhooks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workspace"
                    },
                    {
                        "name": "webhook_id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the webhook"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete webhook",
                "description": "Deletes the requested webhook. This action is irreversible!",
                "operationId": "deleteWebhook",
                "security": [
                    {
                        "API Key with permissions": [
                            "Webhooks.write_webhooks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workspace"
                    },
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the webhook"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Webhook",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "deleted"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "enum": [
                                                true
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "List step runs",
                "description": "Returns a paginated list of step runs.",
                "operationId": "listStepRuns",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_processes"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "process_run_id",
                        "description": "Process Run ID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Step Runs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StepRunResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs/{step_run_id}": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "Get step run",
                "description": "Returns a specific step run from a process run.",
                "operationId": "getStepRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_runs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step_run_id",
                        "description": "ID of the step run",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Step Run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StepRunResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs/{step_run_id}/artifacts": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "List step run artifacts",
                "description": "Returns the list of all artifacts for a step run.",
                "operationId": "listStepRunArtifacts",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_run_outputs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step_run_id",
                        "description": "Step Run ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Artifacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "size"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs/{step_run_id}/artifacts/{artifact_id}": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "Get step run artifact",
                "description": "Returns a step run artifact.",
                "operationId": "getStepRunArtifact",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_run_outputs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step_run_id",
                        "description": "ID of the step run",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artifact_id",
                        "description": "ID of the artifact to retrieve",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artifact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "name",
                                        "size",
                                        "url"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "number"
                                        },
                                        "url": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs/{step_run_id}/console-messages": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "List step run console messages",
                "description": "Returns a paginated list of console messages for the step run.",
                "operationId": "listStepRunConsoleMessages",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_run_outputs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step_run_id",
                        "description": "Step Run ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Step Run Console Messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "timestamp",
                                                    "message"
                                                ],
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/step-runs/{step_run_id}/events": {
            "get": {
                "tags": [
                    "step-run"
                ],
                "summary": "List step run events",
                "description": "Returns the events of a step run.",
                "operationId": "listStepRunEvents",
                "security": [
                    {
                        "API Key with permissions": [
                            "Processes.read_run_outputs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step_run_id",
                        "description": "ID of the step run",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "timestamp",
                                                    "event_type"
                                                ],
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "event_type": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assistants": {
            "get": {
                "tags": [
                    "assistant"
                ],
                "summary": "List assistants",
                "description": "Returns a paginated list of assistants for the workspace.",
                "operationId": "listAssistants",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.read_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Assistants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AssistantResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "assistant"
                ],
                "summary": "Create assistant",
                "description": "Creates a new assistant with the given name and for the specified task inside a task package.",
                "operationId": "createAssistant",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.write_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "task"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "task": {
                                        "type": "object",
                                        "required": [
                                            "name",
                                            "package_id"
                                        ],
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "package_id": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assistant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "name"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assistants/{assistant_id}": {
            "get": {
                "tags": [
                    "assistant"
                ],
                "summary": "Get assistant",
                "description": "Returns an assistant",
                "operationId": "getAssistant",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.read_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "description": "Assistant ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assistant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "name",
                                        "task",
                                        "created_at"
                                    ],
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "task": {
                                            "type": "object",
                                            "required": [
                                                "name",
                                                "package_id"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "package_id": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assistants/{assistant_id}/assistant-runs": {
            "get": {
                "tags": [
                    "assistant"
                ],
                "summary": "List assistant runs for an assistant",
                "description": "Returns a paginated list of assistant runs for the assistant.",
                "operationId": "listAssistantAssistantRuns",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.read_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "description": "Assistant ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Assistant Runs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AssistantRunResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assistant-runs/{assistant_run_id}": {
            "get": {
                "tags": [
                    "assistant"
                ],
                "summary": "Get assistant run",
                "description": "Returns an assistant run for the requested assistant.",
                "operationId": "getAssistantRun",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.read_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assistant_run_id",
                        "description": "Assistant Run ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assistant Run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantRunResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/assistant-runs": {
            "get": {
                "tags": [
                    "assistant"
                ],
                "summary": "List assistant runs for workspace",
                "description": "Returns a paginated list of assistant runs for the workspace.",
                "operationId": "listWorkspaceAssistantRuns",
                "security": [
                    {
                        "API Key with permissions": [
                            "Assistants.read_assistants"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "workspace_id",
                        "description": "Workspace ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Limit for paginated response",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Assistant Runs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "next",
                                        "has_more",
                                        "data"
                                    ],
                                    "properties": {
                                        "next": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/next"
                                        },
                                        "has_more": {
                                            "$ref": "#/components/schemas/paginationDetails/properties/has_more"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AssistantRunResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/genericErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}