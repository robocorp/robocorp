# coding: utf-8

"""
    Robocorp Control Room API

    Robocorp Control Room API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.list_workspace_process_runs200_response import ListWorkspaceProcessRuns200Response  # noqa: E501

class TestListWorkspaceProcessRuns200Response(unittest.TestCase):
    """ListWorkspaceProcessRuns200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListWorkspaceProcessRuns200Response:
        """Test ListWorkspaceProcessRuns200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListWorkspaceProcessRuns200Response`
        """
        model = ListWorkspaceProcessRuns200Response()  # noqa: E501
        if include_optional:
            return ListWorkspaceProcessRuns200Response(
                next = None,
                has_more = None,
                data = [
                    openapi_client.models.process_run_resource.ProcessRunResource(
                        id = '', 
                        state = 'new', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        process = openapi_client.models.list_assets_200_response_data_inner.listAssets_200_response_data_inner(
                            id = '', 
                            name = '', ), 
                        started_by = openapi_client.models.process_run_resource_started_by.ProcessRunResource_started_by(
                            type = 'api', 
                            details = openapi_client.models.process_run_resource_started_by_details.ProcessRunResource_started_by_details(
                                id = '', 
                                first_name = '', 
                                last_name = '', ), ), 
                        duration = 1.337, )
                    ]
            )
        else:
            return ListWorkspaceProcessRuns200Response(
                next = None,
                has_more = None,
                data = [
                    openapi_client.models.process_run_resource.ProcessRunResource(
                        id = '', 
                        state = 'new', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        process = openapi_client.models.list_assets_200_response_data_inner.listAssets_200_response_data_inner(
                            id = '', 
                            name = '', ), 
                        started_by = openapi_client.models.process_run_resource_started_by.ProcessRunResource_started_by(
                            type = 'api', 
                            details = openapi_client.models.process_run_resource_started_by_details.ProcessRunResource_started_by_details(
                                id = '', 
                                first_name = '', 
                                last_name = '', ), ), 
                        duration = 1.337, )
                    ],
        )
        """

    def testListWorkspaceProcessRuns200Response(self):
        """Test ListWorkspaceProcessRuns200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
