# coding: utf-8

"""
    Robocorp Control Room API

    Robocorp Control Room API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.start_process_run_request import StartProcessRunRequest  # noqa: E501

class TestStartProcessRunRequest(unittest.TestCase):
    """StartProcessRunRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StartProcessRunRequest:
        """Test StartProcessRunRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StartProcessRunRequest`
        """
        model = StartProcessRunRequest()  # noqa: E501
        if include_optional:
            return StartProcessRunRequest(
                callback = openapi_client.models.process_run_callback.ProcessRunCallback(
                    url = '', 
                    secret = '', 
                    callback_events = [
                        'started'
                        ], ),
                type = 'with_work_item_ids',
                work_item_ids = [
                    ''
                    ],
                payloads = [
                    null
                    ]
            )
        else:
            return StartProcessRunRequest(
                type = 'with_work_item_ids',
                work_item_ids = [
                    ''
                    ],
                payloads = [
                    null
                    ],
        )
        """

    def testStartProcessRunRequest(self):
        """Test StartProcessRunRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
