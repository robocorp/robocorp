# coding: utf-8

"""
    Robocorp Control Room API

    Robocorp Control Room API

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from workspace.models.list_step_runs200_response import ListStepRuns200Response  # noqa: E501

class TestListStepRuns200Response(unittest.TestCase):
    """ListStepRuns200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListStepRuns200Response:
        """Test ListStepRuns200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListStepRuns200Response`
        """
        model = ListStepRuns200Response()  # noqa: E501
        if include_optional:
            return ListStepRuns200Response(
                next = None,
                has_more = None,
                data = [
                    workspace.models.step_run_resource.StepRunResource(
                        id = '', 
                        state = 'new', 
                        state_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error = workspace.models.step_run_resource_error.StepRunResource_error(
                            code = '', ), 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        duration = 1.337, 
                        step = workspace.models.list_assets_200_response_data_inner.listAssets_200_response_data_inner(
                            id = '', 
                            name = '', ), )
                    ]
            )
        else:
            return ListStepRuns200Response(
                next = None,
                has_more = None,
                data = [
                    workspace.models.step_run_resource.StepRunResource(
                        id = '', 
                        state = 'new', 
                        state_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error = workspace.models.step_run_resource_error.StepRunResource_error(
                            code = '', ), 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        duration = 1.337, 
                        step = workspace.models.list_assets_200_response_data_inner.listAssets_200_response_data_inner(
                            id = '', 
                            name = '', ), )
                    ],
        )
        """

    def testListStepRuns200Response(self):
        """Test ListStepRuns200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
